include required(classpath("application"))

webservice
{
  port = 50011
#   port = 8088
}

workflow-options
{
  workflow-log-dir: "cromwell-workflow-logs"
  workflow-log-temporary: false
}

call-caching
{
  enabled = true
  invalidate-bad-cache-result = true
}

backend
{
  default = "local"

  providers
  {

    local
    {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"

      config
      {

        concurrent-job-limit = 5
        run-in-background = true
        #temporary-directory = "`mktemp -d \"/global/cscratch1/sd/jaws/cromwell-tmp\"/tmp.XXXXXX`"

        # The list of possible runtime custom attributes.
        runtime-attributes = """
        String? docker
        String? docker_user
        """

        # Submit string when there is no "docker" runtime attribute.
        submit = "/usr/bin/env bash ${script}"

        # Submit string when there is a "docker" runtime attribute.
        submit-docker = "docker run --env-file=/mnt/c/NMDC/MetaPro/metaPro-config.env --volume=${cwd}:${docker_cwd} --volume=/mnt/d/NMDC:/refdata ${docker} ${script}"

        root = "/mnt/d/NMDC/cromwell-executions"
        dockerRoot = "/mnt/d/NMDC/cromwell-executions"

        filesystems
        {
          local
          {
            localization: [ "soft-link", "hard-link", "copy" ]

            caching {
              duplication-strategy: [ "soft-link" ]
              hashing-strategy: "path"
            }
          }
        }

        default-runtime-attributes
        {
          failOnStderr: false
          continueOnReturnCode: 0
        }
      }
    }

    SLURM
    {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config
      {
        runtime-attributes = """
        String time = "10:00"
        Int cpus = 1
        String mem = "6G"
        """

        submit = """
            sbatch -J ${job_name} -D ${cwd} -o ${out} -e ${err} -t ${time} -c ${cpus} --mem=${mem} \
            --wrap "/usr/bin/env bash ${script}"
        """
        kill = "scancel ${job_id}"
        check-alive = "squeue -j ${job_id}"
        job-id-regex = "Submitted batch job (\\d+).*"
      }
    }
  }
}

database {
  profile = "slick.jdbc.HsqldbProfile$"
  db {
    driver = "org.hsqldb.jdbcDriver"
    url = """
    jdbc:hsqldb:file:cromwell-executions/cromwell-db/cromwell-db;
    shutdown=false;
    hsqldb.default_table_type=cached;hsqldb.tx=mvcc;
    hsqldb.result_max_memory_rows=10000;
    hsqldb.large_data=true;
    hsqldb.applog=1;
    hsqldb.lob_compressed=true;
    hsqldb.script_format=3
    """
    connectionTimeout = 120000
    numThreads = 1
   }
}

docker.hash-lookup.method = "local"
