#       -------------------------------Disclaimer-----------------------------------------------------------------------
#       This material was prepared as an account of work sponsored by an agency of the
#       United States Government.  Neither the United States Government nor the United
#       States Department of Energy, nor Battelle, nor any of their employees, nor any
#       jurisdiction or organization that has cooperated in the development of these
#       materials, makes any warranty, express or implied, or assumes any legal
#       liability or responsibility for the accuracy, completeness, or usefulness or
#       any information, apparatus, product, software, or process disclosed, or
#       represents that its use would not infringe privately owned rights.
#
#       Reference herein to any specific commercial product, process, or service by
#       trade name, trademark, manufacturer, or otherwise does not necessarily
#       constitute or imply its endorsement, recommendation, or favoring by the United
#       States Government or any agency thereof, or Battelle Memorial Institute. The
#       views and opinions of authors expressed herein do not necessarily state or
#       reflect those of the United States Government or any agency thereof.
#
#                 PACIFIC NORTHWEST NATIONAL LABORATORY
#                              operated by
#                                BATTELLE
#                                for the
#                   UNITED STATES DEPARTMENT OF ENERGY
#                    under Contract DE-AC05-76RL01830
#       ----------------------------------------------------------------------------------------------------------

#       -------------------------------THANKS & CREDITS to:-------------------------------------------------------
#        1. Proteowizard [Chambers, Matthew <matt.chambers42@gmail.com>]
#                    ProteoWizard_description   :: "Convert MS RAW vendor files to open formats or analyze them with Skyline."
#                    ProteoWizard_website       :: https://github.com/ProteoWizard/container
#                    ProteoWizard_license       :: https://github.com/ProteoWizard/container
#                    - NOTE: Use base Wine at least until the .NET version needs to be upgraded!
#                            https://hub.docker.com/r/chambm/wine-dotnet
#                            [ built of:https://github.com/ProteoWizard/container/blob/master/dotnet/Dockerfile]
#
#        2. MoTrPAC  [David Jimenez-Morales <david.jimenez-morales@stanford.edu>]
#                    https://github.com/MoTrPAC/motrpac-proteomics-pnnl-prototype
#        3. Mono 5.16.0.220 [pgermishuys <https://hub.docker.com/u/pgermishuys>]
#                    https://hub.docker.com/r/eventstore/eventstore-ci-ubuntu-16.04/dockerfile
#        4. PNNL-Comp-Mass-Spec [Monroe, Matthew E <Matthew.Monroe@pnnl.gov>]
#                    MSGFPlus                  :: https://github.com/MSGFPlus/msgfplus/releases/
#                    MzidToTsvConverter        :: https://github.com/PNNL-Comp-Mass-Spec/Mzid-To-Tsv-Converter/releases/
#                    PeptideHitResultsProcessor:: https://github.com/PNNL-Comp-Mass-Spec/PHRP/releases/
#                    MASIC                     :: https://github.com/PNNL-Comp-Mass-Spec/MASIC/releases/
#                    ProteinDigestionSimulator :: https://github.com/PNNL-Comp-Mass-Spec/Protein-Digestion-Simulator/releases/
#       --------------------------------------------------------------------------------------------------------
FROM chambm/wine-dotnet:4.7-x64

ARG BUILD_DATE
#ARG VCS_REF
ARG BUILD_VERSION

# Labels.
LABEL org.label-schema.build-date=$BUILD_DATE
LABEL org.label-schema.name="National Microbiome Data Collaborative: Meta-proteomics workflow"
LABEL org.label-schema.description="NMDC Meta-proteomics workflow \
                                    - This image is built on Ubuntu-16.04 and more information about the image and \
                                      how to run it's container can be found on ["org.label-schema.vcs-url"] \
                                    - Additionally, documentation[Examples, datasets etc] is at \
                                      https://nmdc-proteomics-workflow.readthedocs.io/en/latest/"
LABEL org.label-schema.url="https://microbiomedata.org/"
LABEL org.label-schema.vcs-url="https://github.com/PNNL-Comp-Mass-Spec/NMDC-Proteomics-Workflow"
#LABEL org.label-schema.vcs-ref=$VCS_REF
LABEL org.label-schema.vendor="Pacific Northwest National Laboratory-Integrative omics group"
LABEL org.label-schema.version=$BUILD_VERSION
LABEL maintainer="Anubhav <anubhav@pnnl.gov>"
LABEL tags="Proteomics,MassSpectrometry"

# Based on mono:
#       - MASIC_Console
#       - MzidToTsvConverter
#       - PeptideHitResultsProcRunner
# Based on Wine:
#       - msconvert
#       - ProteinDigestionSimulator
# Based on Java:
#       - MSGFPlus

#                          ----- ProteoWizard :: msconvert :: Start -----
# .NET 4+ on Wine 64-bit with base image Ubuntu-16.04
# pwiz MSconvert :: Download Windows 64-bit tar.bz2 [ http://proteowizard.sourceforge.net/download.html ]
ENV PROTEOWIZARD_RELEASE_VERSION="3.0.21193 (ccb3e0136)"
ENV PROTEOWIZARD_DOWNLOADED_FILE="pwiz-bin-windows-x86_64-vc141-release-3_0_21193_ccb3e0136.tar.bz2"
ADD ./docker/pwiz-bin-windows-*.tar.bz2 /wineprefix64/drive_c/pwiz
ENV CONTAINER_GITHUB=https://github.com/ProteoWizard/container

ENV WINEDEBUG -all
ENV WINEPATH "C:\pwiz"
# sudo needed to run wine when container is run as a non-default user (e.g. -u 1234)
# wine*_anyuser scripts are convenience scripts that work like wine/wine64 no matter what user calls them
RUN apt-get update && \
    apt-get -y install sudo && \
    apt-get -y clean && \
    echo "ALL     ALL=NOPASSWD:  ALL" >> /etc/sudoers && \
    echo '#!/bin/sh\nsudo -E -u root wine64 "$@"' > /usr/bin/wine64_anyuser && \
    echo '#!/bin/sh\nsudo -E -u root wine "$@"' > /usr/bin/wine_anyuser && \
    chmod ugo+rx /usr/bin/wine*anyuser && \
    rm -rf \
      /var/lib/apt/lists/* \
      /usr/share/doc \
      /usr/share/doc-base \
      /usr/share/man \
      /usr/share/locale \
      /usr/share/zoneinfo

# create UIDs that Galaxy uses in default configs to launch docker containers; the UID must exist for sudo to work
RUN groupadd -r galaxy -g 1450 && \
    useradd -u 1450 -r -g galaxy -d /home/galaxy -c "Galaxy user" galaxy && \
    useradd -u 1000 -r -g galaxy -d /home/galaxy -c "Galaxy docker user" galaxy_docker && \
    useradd -u 2000 -r -g galaxy -d /home/galaxy -c "Galaxy Travis user" galaxy_travis && \
    useradd -u 999 -r -g galaxy -d /home/galaxy -c "usegalaxy.eu user" galaxy_eu

## Set up working directory and permissions to let user xclient save data
RUN mkdir /data
WORKDIR /data
CMD ["wine64_anyuser", "msconvert" ]
## If you need a proxy during build, don't put it into the Dockerfile itself:
## docker build --build-arg http_proxy=http://proxy.example.com:3128/  -t repo/image:version .

ADD ./docker/mywine /usr/bin/
RUN chmod ugo+rx /usr/bin/mywine
#                          ----- ProteoWizard :: msconvert :: End -----

# Install necessary tools
RUN apt-get update \
    && apt-get install --no-install-recommends --yes gcc \
                                                    git \
                                                    openjdk-8-jre \
                                                    tzdata \
                                                    unixodbc \
                                                    unixodbc-dev \
                                                    freetds-dev \
                                                    freetds-bin \
                                                    tdsodbc \
                                                    software-properties-common \
                                                    apt-transport-https \
                                                    curl \
                                                    unzip \
                                                    rake \
                                                    sudo \
                                                    libcurl3 \
    && apt-get clean
    
# install mono
ENV DEBIAN_FRONTEND noninteractive
RUN add-apt-repository ppa:git-core/ppa -y
RUN curl -s -o packages-microsoft-prod.deb https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb \
    && sudo dpkg -i packages-microsoft-prod.deb
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \
    && echo "deb http://download.mono-project.com/repo/ubuntu stable-xenial/snapshots/5.16.0.220 main" main | sudo tee /etc/apt/sources.list.d/mono-official.list \
    && apt-get update
RUN apt-get install -y mono-devel=5.16.0.220-0xamarin4+ubuntu1604b1 msbuild=1:16.0+xamarinxplat.2018.09.26.17.53-0xamarin3+ubuntu1604b1 dotnet-sdk-2.1

# MASIC layer
ENV MASIC_VERSION=v3.2.7762
RUN wget -P /app/masic/ https://github.com/PNNL-Comp-Mass-Spec/MASIC/releases/download/$MASIC_VERSION/MASIC_Console_Program.zip \
    && cd /app/masic/ \
    && unzip MASIC_Console_Program.zip \
    && rm MASIC_Console_Program.zip

# MSGFPlus layer
ENV MSGFPLUS_VERSION=v2021.03.22
ENV MSGFPLUS_ZIP_VERSION=v20210322
RUN wget -P /app/msgf https://github.com/MSGFPlus/msgfplus/releases/download/$MSGFPLUS_VERSION/MSGFPlus_$MSGFPLUS_ZIP_VERSION.zip \
    && cd /app/msgf/ \
    && unzip MSGFPlus_$MSGFPLUS_ZIP_VERSION.zip \
    && rm MSGFPlus_$MSGFPLUS_ZIP_VERSION.zip

# MzidToTSVConverter layer
ENV MZID2TSV_VERSION=v1.4.6
RUN wget -P /app/mzid2tsv/ https://github.com/PNNL-Comp-Mass-Spec/Mzid-To-Tsv-Converter/releases/download/$MZID2TSV_VERSION/MzidToTsvConverter.zip \
    && cd /app/mzid2tsv/ \
    && unzip MzidToTsvConverter.zip \
    && rm MzidToTsvConverter.zip

# install System.Data.SQLite
# download from https://system.data.sqlite.org/downloads/1.0.111.0/sqlite-netFx-full-source-1.0.111.0.zip
RUN wget -P /app/sqlite/ https://github.com/AshleyLab/motrpac-proteomics-pnnl-prototype/raw/master/step06/sqlite-netFx-full-source-1.0.111.0.zip \
    && cd /app/sqlite/ \
    && unzip sqlite-netFx-full-source-1.0.111.0.zip \
    && rm sqlite-netFx-full-source-1.0.111.0.zip \
    && chmod +x /app/sqlite/Setup/compile-interop-assembly-release.sh \
    && /app/sqlite/Setup/compile-interop-assembly-release.sh

# PeptideHitResultsProcessor layer
ENV PEPTIDE_HIT_RESULTS_PROCESSOR_VERSION=v3.0.7842
RUN wget -P /app/phrp/ https://github.com/PNNL-Comp-Mass-Spec/PHRP/releases/download/$PEPTIDE_HIT_RESULTS_PROCESSOR_VERSION/PeptideHitResultsProcessor.zip \
    && cd /app/phrp/ \
    && unzip PeptideHitResultsProcessor*.zip \
    && rm PeptideHitResultsProcessor*.zip \
    && cp /app/sqlite/bin/2013/Release/bin/libSQLite.Interop.so /app/phrp/ \
    && chmod -x /app/phrp/libSQLite.Interop.so

# ProteinDigestionSimulator layer
ENV PROTEIN_DIGESTION_SIMULATOR_VERSION=v2.3.7794
RUN wget -P /app/ProteinDigestionSimulator/ https://github.com/PNNL-Comp-Mass-Spec/Protein-Digestion-Simulator/releases/download/$PROTEIN_DIGESTION_SIMULATOR_VERSION/ProteinDigestionSimulator_Program.zip \
    && cd /app/ProteinDigestionSimulator/ \
    && unzip ProteinDigestionSimulator_Program.zip \
    && rm ProteinDigestionSimulator_Program.zip

# Validate-Fasta-File layer
ENV VALIDATE_FASTA_FILE_VERSION=v2.2.7887
RUN wget -P /app/ValidateFastaFile/ https://github.com/PNNL-Comp-Mass-Spec/Validate-Fasta-File/releases/download/$VALIDATE_FASTA_FILE_VERSION/ValidateFastaFile_Program.zip \
    && cd /app/ValidateFastaFile/ \
    && unzip ValidateFastaFile_Program.zip \
    && rm ValidateFastaFile_Program.zip



# FastaFileSplitter layer
ENV Fasta_File_Splitter_VERSION=v1.1.7887
RUN wget -P /app/FastaFileSplitter/ https://github.com/PNNL-Comp-Mass-Spec/Fasta-File-Splitter/releases/download/$Fasta_File_Splitter_VERSION/FASTA_File_Splitter_Program.zip \
    && cd /app/FastaFileSplitter/ \
    && unzip FASTA_File_Splitter_Program.zip \
    && rm FASTA_File_Splitter_Program.zip

# MASICResultsMerge layer
ENV MASICResultsMerge_VERSION=v2.0.7800
RUN wget -P /app/MASICResultsMerge/ https://github.com/PNNL-Comp-Mass-Spec/MASIC-Results-Merger/releases/download/$MASICResultsMerge_VERSION/MASICResultsMerger_Program.zip \
    && cd /app/MASICResultsMerge/ \
    && unzip MASICResultsMerger_Program.zip \
    && rm MASICResultsMerger_Program.zip

# MzidMerger layer
ENV MzidMerger_VERSION=v1.3.0
RUN wget -P /app/MzidMerger/ https://github.com/PNNL-Comp-Mass-Spec/MzidMerger/releases/download/$MzidMerger_VERSION/MzidMerger.zip \
    && cd /app/MzidMerger/ \
    && unzip MzidMerger.zip \
    && rm MzidMerger.zip

ENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
ENV MONO_HOME=/usr/bin/mono
ENV WINE_HOME=/usr/bin/wine

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b -p /opt/conda && \
    rm ~/miniconda.sh && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

RUN apt-get install -y curl grep sed dpkg && \
    TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && \
    curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
    dpkg -i tini.deb && \
    rm tini.deb && \
    apt-get clean

ENTRYPOINT [ "/usr/bin/tini", "--" ]

RUN conda create --name proteomics_env python=3.8
SHELL ["conda", "run", "-n", "proteomics_env", "/bin/bash", "-c"]
RUN pip install pandas openpyxl JSON-log-formatter
RUN echo "conda activate proteomics_env" >> ~/.bashrc

# copy project
COPY ./src /app/metaPro/src
COPY ./utility /app/metaPro/utility
COPY ./setup.py /app/metaPro/setup.py

RUN cd /app/metaPro/ \
    && pip install -e .

#clean unnecessary packages
RUN  apt-get -y remove  curl \
                        git \
                        unzip \
                        libcurl3 \
     &&  apt-get -y autoremove && apt-get clean
WORKDIR /app


